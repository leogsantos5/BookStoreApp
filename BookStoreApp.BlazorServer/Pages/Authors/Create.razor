@page "/authors/create/"
@inject IAuthorService authorService
@inject NavigationManager navManager
@attribute [Authorize(Roles ="Administrator")]

<h3>Create New Author</h3>
<EditForm Model="Author" OnValidSubmit="HandleCreateAuthor">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label for="firstname"> First Name </label>
        <InputText @bind-Value="Author.FirstName" class="form-control" id="firstname"/>
        <ValidationMessage For = "@(() => Author.FirstName)" />
    </div>
    <div class="form-group">
        <label for="lastname"> Last Name </label>
        <InputText @bind-Value="Author.LastName" class="form-control" id="lastname"/>
        <ValidationMessage For = "@(() => Author.LastName)" />
    </div>
    <div class="form-group">
        <label for="bio"> Biography </label>
        <InputText @bind-Value="Author.Bio" class="form-control" id="bio"/>
        <ValidationMessage For = "@(() => Author.Bio)" />
    </div>
    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil">Create Author</span>
    </button>
    <button @onclick="BackToAuthorsList" class="btn btn-outline-secondary" type="button">
        <span class="oi oi-media-skip-backward"></span>
        Back To Authors List
    </button>

</EditForm>

@code {
    private AuthorCreateDTO Author = new AuthorCreateDTO();

    private async Task HandleCreateAuthor()
    {
        var response = await authorService.CreateAuthor(Author);
        if (response.Success)
            BackToAuthorsList();
    }

    private void BackToAuthorsList()
    {
        navManager.NavigateTo("/authors/");
    }
}
