@page "/authors"
@inject IClient httpClient
@inject IAuthorService authorService
@inject IJSRuntime javascript
<h3>Authors</h3>

@if(response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
@if (AuthorsModel == null)
{
    <div class="alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <a class="btn btn-dark" href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span></a>
    <br/>
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var author in AuthorsModel)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a class="btn btn-primary" href="/authors/details/@author.Id"><span class="oi oi-book" aria-hidden="true"></span>Details</a>
                        <a class="btn btn-warning" href="/authors/update/@author.Id"><span class="oi oi-pencil" aria-hidden="true"></span>Edit</a>
                        <button class="btn btn-danger" @onclick=@(()=> DeleteAuthor(author.Id)) href="/authors/delete"><span class="oi oi-delete" aria-hidden="true"></span>Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AuthorReadOnlyDto> AuthorsModel;
    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        response = await authorService.GetAuthors();
        if (response.Success)
        {
            AuthorsModel = response.Data;
        }
    }

    private async Task DeleteAuthor(int authorId)
    {
        var author = AuthorsModel.Where(author => author.Id == authorId).FirstOrDefault();
        var confirm = await javascript.InvokeAsync<bool>("confirm", $"Are you sure you want to delete the author {author.FirstName} {author.LastName}?");
        if(confirm){
            var response = await authorService.DeleteAuthor(authorId);
            if (response.Success)
                await OnInitializedAsync();
        }
    }
}
