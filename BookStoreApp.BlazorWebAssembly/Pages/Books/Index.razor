@page "/books"
@inject IClient httpClient
@inject IBookService bookService
@inject IJSRuntime javascript
<h3>Books</h3>

@if (response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
@if (BooksModel == null)
{
    <div class="alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <a class="btn btn-dark" href="/books/create"><span class="oi oi-plus" aria-hidden="true"></span></a>
    <br />
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Image</th>
                <th>Title</th>
                <th>Author Name</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in BooksModel)
            {
                <tr>
                    <td><img src="@book.Image" width="100" height="100" alt="@book.Title"/></td>
                    <td>@book.Title</td>
                    <td><a class=" btn btn-link" href="/authors/details/@book.AuthorId">@book.AuthorName</a></td>
                    <td>@book.Price.ToString("C")</td>
                    <td>
                        <a class="btn btn-primary" href="/books/details/@book.Id"><span class="oi oi-book" aria-hidden="true"></span>Details</a>
                        <AuthorizeView Roles="Administrator">
                            <a class="btn btn-warning" href="/books/update/@book.Id"><span class="oi oi-pencil" aria-hidden="true"></span>Edit</a>
                            <button class="btn btn-danger" @onclick=@(()=> DeleteBook(book.Id)) href="/books/delete"><span class="oi oi-delete" aria-hidden="true"></span>Delete</button>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BookReadOnlyDto> BooksModel;
    private Response<List<BookReadOnlyDto>> response = new Response<List<BookReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        response = await bookService.GetBooks();
        if (response.Success)
        {
            BooksModel = response.Data;
        }
    }

    private async Task DeleteBook(int bookId)
    {
        var book = BooksModel.Where(Book => Book.Id == bookId).FirstOrDefault();
        var confirm = await javascript.InvokeAsync<bool>("confirm", $"Are you sure you want to delete the book {book.Title}?");
        if (confirm)
        {
            var response = await bookService.DeleteBook(bookId);
            if (response.Success)
                await OnInitializedAsync();
        }
    }
}
